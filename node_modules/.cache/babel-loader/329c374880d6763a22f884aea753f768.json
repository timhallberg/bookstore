{"ast":null,"code":"var _jsxFileName = \"/Users/timhallberg/Desktop/Workplace/Bookstore/bookstore/src/bookcardview.jsx\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getBookShopData } from \"./bookstoredata\"; //import the fucntion to fetch data.\n\nimport { Link } from \"react-router-dom\";\n/*This component shows each book in a card. Bootstrap Card have been used in this component */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookCardView = props => {\n  //here we fetch the input parameter which are category and search phrase oy the user\n  const category = props.match.params.category; //we use || symbol here in case the search phrase is null \n\n  const searchPhrase = props.match.params.searchPhrase || \"\"; //Fetch all data to an array of objects\n\n  const bookArray = getBookShopData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children:\n      /*here we use map to create a loop and show books. At the same time we filter the list if the user has chosen a category or entered a search phrase. */\n      bookArray.filter(x => (x.category == category || category == \"all\") && x.title.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1).map(book => /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        sm: \"6\",\n        xl: \"3\",\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            style: {\n              height: \"400px\"\n            },\n            src: book.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 25\n                }, this), book.isFavourite ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-heart fa-lg\",\n                  style: {\n                    color: \"Red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"far fa-heart fa-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 107\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                className: \"text-muted text-wrap mb-2\",\n                children: book.subTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [book.desc.substring(0, 100), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                children: [\"Buy \", book.price, \" SEK\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/bookdetails/\" + book.bookID,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  children: \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 64\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = BookCardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCardView\");","map":{"version":3,"sources":["/Users/timhallberg/Desktop/Workplace/Bookstore/bookstore/src/bookcardview.jsx"],"names":["Card","Button","Row","Col","React","getBookShopData","Link","BookCardView","props","category","match","params","searchPhrase","bookArray","filter","x","title","toLowerCase","indexOf","map","book","height","image","isFavourite","color","subTitle","desc","substring","price","bookID"],"mappings":"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","sourcesContent":["import { Card, Button, Row, Col } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { getBookShopData } from \"./bookstoredata\";//import the fucntion to fetch data.\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*This component shows each book in a card. Bootstrap Card have been used in this component */\r\nexport const BookCardView = (props) => {\r\n  //here we fetch the input parameter which are category and search phrase oy the user\r\n  const category = props.match.params.category;\r\n  //we use || symbol here in case the search phrase is null \r\n  const searchPhrase = props.match.params.searchPhrase || \"\";\r\n\r\n  //Fetch all data to an array of objects\r\n  const bookArray = getBookShopData();\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <Row>\r\n        {\r\n          /*here we use map to create a loop and show books. At the same time we filter the list if the user has chosen a category or entered a search phrase. */\r\n          bookArray\r\n            .filter(\r\n              (x) =>\r\n                (x.category == category || category == \"all\") &&\r\n                x.title.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1\r\n            )\r\n            .map((book) => (\r\n              <Col md=\"3\" sm=\"6\" xl=\"3\" className=\"p-3\">\r\n                {/*each bood is shown in a card*/}\r\n                <Card>\r\n                  <Card.Img style={{ height: \"400px\" }} src={book.image} />\r\n                  <Card.Body>\r\n                    <div style={{ height: \"100px\" }}>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Card.Title>{book.title}</Card.Title>\r\n                        {/*here we show MyFavourite icon based on the data that we have. we make it red or empty.*/}\r\n                        {book.isFavourite ? <i class=\"fas fa-heart fa-lg\" style={{ color: \"Red\" }}></i> : <i class=\"far fa-heart fa-lg\"></i>}\r\n                      </div>\r\n                      <Card.Subtitle className=\"text-muted text-wrap mb-2\">\r\n                        {book.subTitle}\r\n                      </Card.Subtitle>\r\n                    </div>\r\n                    {/*only 100 first letters are shown*/}\r\n                    <Card.Text>{book.desc.substring(0, 100)}...</Card.Text>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Button variant=\"danger\">Buy {book.price} SEK</Button>\r\n                      {/*The link to the detail book component. we must send BookID to the component. Otherwise the component does not know which book to show*/}\r\n                      <Link to={\"/bookdetails/\" + book.bookID}><Button variant=\"primary\">Read More</Button></Link>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}